
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import threading
import random
import cv2
import sqlite3
import socket
import struct
import pickle
import numpy as np
from PIL import Image, ImageTk
from pathlib import Path



# from tkinter import *
# Explicit imports to satisfy Flake8
import tkinter.messagebox as msgbox
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Frame

"""database section"""
def create_database():
    conn = sqlite3.connect('user_data.db')
    c = conn.cursor()
    
    c.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        username TEXT NOT NULL UNIQUE,
        password TEXT NOT NULL,
        name TEXT NOT NULL,
        face_hash TEXT
    )
    ''')
    
    conn.commit()
    conn.close()

def user_exists(username):
    conn = sqlite3.connect('user_data.db')
    c = conn.cursor()
    
    c.execute('''
    SELECT 1 FROM users WHERE username = ?
    ''', (username,))
    
    exists = c.fetchone() is not None
    conn.close()
    
    return exists

def insert_user(username, password, name, face_hash):
    if user_exists(username):
        print(f"User with username '{username}' already exists.")
        return

    conn = sqlite3.connect('user_data.db')
    c = conn.cursor()
    
    try:
        c.execute('''
        INSERT INTO users (username, password, name, face_hash)
        VALUES (?, ?, ?, ?)
        ''', (username, password, name, face_hash))
        
        conn.commit()
        print(f"User '{username}' inserted successfully.")
    except sqlite3.IntegrityError as e:
        print(f"An error occurred: {e}")
    finally:
        conn.close()

def get_user(username):
    conn = sqlite3.connect('user_data.db')
    c = conn.cursor()
    
    c.execute('''
    SELECT * FROM users WHERE username = ?
    ''', (username, ))
    
    user = c.fetchone()
    conn.close()
    
    return user

def update_face_hash(username, face_hash):
    try:
        conn = sqlite3.connect('user_data.db')
        c = conn.cursor()
        
        c.execute('''
        UPDATE users SET face_hash = ? WHERE username = ?
        ''', (face_hash, username))
        
        if c.rowcount == 0:
            print("No user found with the given username.")
        else:
            print(f"Updated face_hash for user {username}.")
        
        conn.commit()
    except sqlite3.Error as e:
        print(f"An error occurred: {e}")
    finally:
        conn.close()

# 데이터베이스 생성 및 초기화
create_database()

# 사용자 데이터 삽입
insert_user('user123', 'password123', 'test', 'None')

# 사용자 데이터 조회
user = get_user('user123')

"""network section"""

def send_image(socket_connection, frame):
    data = pickle.dumps(frame)
    message_size = struct.pack("L", len(data))
    socket_connection.sendall(b"%IMAG" + message_size + data)

def receive_video(socket_connection):
    data = b""
    payload_size = struct.calcsize("L")

    while True:
        while len(data) < payload_size:
            packet = socket_connection.recv(4096)
            if not packet:
                return
            data += packet

        packed_msg_size = data[:payload_size]
        data = data[payload_size:]
        msg_size = struct.unpack("L", packed_msg_size)[0]

        while len(data) < msg_size:
            data += socket_connection.recv(4096)

        frame_data = data[:msg_size]
        data = data[msg_size:]

        frame = pickle.loads(frame_data)
        cv2.imshow('Received', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    socket_connection.close()
    cv2.destroyAllWindows()


def receive_image(socket_connection):
    payload_size = struct.calcsize("L")

    packed_msg_size = socket_connection.recv(payload_size)
    if not packed_msg_size:
        return None

    msg_size = struct.unpack("L", packed_msg_size)[0]

    data = b""
    while len(data) < msg_size:
        packet = socket_connection.recv(4096)
        if not packet:
            return None
        data += packet

    frame_data = data[:msg_size]
    frame = pickle.loads(frame_data)
    return frame

def send_control_message(socket_connection, message):
    if message in ["%OPEN", "%CLOS", "%RAND", "%QQQQ"]:
        socket_connection.sendall(message.encode())
    else:
        raise ValueError("Invalid control message. Use '%OPEN', '%CLOSE', or '%RAND'")

def receive_control_message(socket_connection):
    message_type = socket_connection.recv(6)
    if message_type in [b"%OPEN", b"%CLOS", b"%RAND", b"%QQQQ"]:
        return message_type.decode()
    elif message_type == b"%IMAG":
        return "%IMAG"
    else:
        return None



def connect_to_server():
    global client_socket
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect(('localhost', 9999))
    print('Connected to server')

    while True:
        message_type = receive_control_message(client_socket)
        if message_type == "%OPEN":
            opening = True
            print("Connection opened")
        elif message_type == "%CLOS":
            opening = False
            print("Connection closed")
            #client_socket.close()
        elif message_type == "%RAND":
            print("Random message received")
        elif message_type == "%IMAG":
            frame = receive_image(client_socket)
            if frame is not None:
                show_image(frame)

def show_image(frame):
    image = Image.fromarray(frame)
    image_tk = ImageTk.PhotoImage(image=image)
    canvas.create_image(0, 0, anchor=Tk.NW, image=image_tk)
    canvas.image = image_tk  # Keep a reference to avoid garbage collection

"""opencv section"""

face_classifier_path = './haarcascade_frontalface_default.xml'
face_classifier = cv2.CascadeClassifier(face_classifier_path)

def face_extractor(img):
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_classifier.detectMultiScale(gray, 1.3, 5)
    if len(faces) == 0:
        return None
    for (x, y, w, h) in faces:
        cropped_face = img[y:y+h, x:x+w]
    return cropped_face

def preprocess_image(face):
    face = cv2.resize(face, (300, 300))
    face = cv2.cvtColor(face, cv2.COLOR_BGR2GRAY)
    _, face = cv2.threshold(face, 100, 255, cv2.THRESH_BINARY)
    kernel = np.ones((1, 1), np.uint8)
    face = cv2.erode(face, kernel, iterations=10)
    return face

"""window section"""
opening = False

def generate_pin():
    return random.randint(1000, 9999)

def copy_to_clipboard(text):
    global windoww
    window.clipboard_clear()  # Clear the clipboard
    window.clipboard_append(text)  # Append the text to the clipboard

now_id = None
window = Tk()

window.geometry("393x852")
window.configure(bg = "#181A20")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def clear_all():
    global window

    for child in window.winfo_children():
        print(child.winfo_id)
        child.destroy()

def turn_window(window_id : int):
    global now_id
    
    global OUTPUT_PATH
    global ASSETS_PATH
    global window
    global canvas

    global image_image_1
    global image_image_2
    global image_image_3
    global image_image_4
    global image_image_5
    global image_image_6
    global image_image_7
    global image_image_8
    global image_image_9
    global image_image_10
    global image_image_11
    global image_image_12
    global image_image_13
    global image_image_14
    
    global image_1
    global image_2
    global image_3
    global image_4
    global image_5
    global image_6
    global image_7
    global image_8
    global image_9
    global image_10
    global image_11
    global image_12
    global image_13
    global image_14

    global button_1
    global button_2
    global button_3
    global button_4
    global button_5
    global button_6
    global button_7
    global button_8
    global button_9
    global button_10
    global button_11
    global button_12
    global button_13
    global button_14
    global button_15
    global button_16
    global button_17
    global button_18
    global button_19
    global button_20
    global button_21
    global button_22
    
    global entry_1
    global entry_2
    global entry_3
    global entry_4
    global entry_bg_1
    global entry_bg_2
    global entry_bg_3
    global entry_bg_4

    global button_image_1
    global button_image_2
    global button_image_3
    global button_image_4
    global button_image_5
    global button_image_6
    global button_image_7
    global button_image_8
    global button_image_9
    global button_image_10
    global button_image_11
    global button_image_12
    global button_image_13
    global button_image_14
    global button_image_15
    global button_image_16
    global button_image_17
    global button_image_18
    global button_image_19
    global button_image_20
    global button_image_21
    global button_image_22
    
    global entry_image_1
    global entry_image_2
    global entry_image_3

    clear_all()
    if window_id == 24:
        
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame24/")
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png")
        )


        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(23),
            relief="flat"
        )


        button_1.place(
            x=34.0,
            y=753.0,
            width=326.0,
            height=60.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            197.0,
            407.0,
            image=image_image_2
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_3
        )

    elif window_id == 23:
                
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame23/")
        window.configure(bg = "#181A20")


        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(19),
            relief="flat"
        )
        button_1.place(
            x=34.0,
            y=753.0,
            width=326.0,
            height=60.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            197.0,
            728.0,
            image=image_image_2
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            196.0,
            403.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_4
        )

    elif window_id == 19:
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame19/")
        window.configure(bg = "#181A20")
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(18),
            relief="flat"
        )
        button_1.place(
            x=34.0,
            y=753.0,
            width=326.0,
            height=60.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            197.0,
            728.0,
            image=image_image_2
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            196.0,
            402.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_4
        )
    elif window_id == 18:
                
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame18/")
        window.configure(bg = "#181A20")
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(17),
            relief="flat"
        )
        button_1.place(
            x=34.0,
            y=753.0,
            width=326.0,
            height=60.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            197.0,
            728.0,
            image=image_image_2
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            197.0,
            405.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_4
        )

    elif window_id == 17:
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame17/")
        window.configure(bg = "#181A20")
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            197.0,
            519.0,
            image=image_image_2
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            66.0,
            472.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            197.0,
            411.0,
            image=image_image_4
        )

        entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(
            214.0,
            519.0,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=88.0,
            y=507.0,
            width=252.0,
            height=22.0
        )

        entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_2 = canvas.create_image(
            214.0,
            411.0,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=88.0,
            y=399.0,
            width=252.0,
            height=22.0
        )

        image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = canvas.create_image(
            86.0,
            364.0,
            image=image_image_5
        )

        image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        image_6 = canvas.create_image(
            197.0,
            579.0,
            image=image_image_6
        )

        image_image_7 = PhotoImage(
            file=relative_to_assets("image_7.png"))
        image_7 = canvas.create_image(
            169.0,
            775.9999389648438,
            image=image_image_7
        )


        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(16),
            relief="flat"
        )
        button_1.place(
            x=243.0,
            y=765.0,
            width=54.0,
            height=22.0
        )

        image_image_8 = PhotoImage(
            file=relative_to_assets("image_8.png"))
        image_8 = canvas.create_image(
            197.0,
            218.0,
            image=image_image_8
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: login(entry_2.get(), entry_1.get()),
            relief="flat"
        )

        def login(id, password):
            global now_id
            print(get_user(id))

            if get_user(id) is not None and get_user(id)[2] == password:
                now_id = id
                turn_window(14)
            else:
                msgbox.showwarning("에러", "아이디와 비밀번호가 일치하지 않습니다.")


        button_2.place(
            x=34.0,
            y=627.0,
            width=326.0,
            height=60.0
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(24),
            relief="flat"
        )
        button_3.place(
            x=32.0,
            y=66.0,
            width=23.0,
            height=18.0
        )

        image_image_9 = PhotoImage(
            file=relative_to_assets("image_9.png"))
        image_9 = canvas.create_image(
            196.0,
            77.0,
            image=image_image_9
        )

        image_image_10 = PhotoImage(
            file=relative_to_assets("image_10.png"))
        image_10 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_10
        )
    elif window_id == 16:
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame16/")
        window.configure(bg = "#181A20")


        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(17),
            relief="flat"
        )
        button_1.place(
            x=243.0,
            y=765.0,
            width=51.0,
            height=22.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            173.0,
            775.9999389648438,
            image=image_image_2
        )


        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda:register(),
            relief="flat"
        )
        button_2.place(
            x=34.0,
            y=580.0,
            width=326.0,
            height=60.0
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            197.0,
            345.0,
            image=image_image_3
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(17),
            relief="flat"
        )
        button_3.place(
            x=32.0,
            y=65.0,
            width=24.0,
            height=19.0
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            196.0,
            77.0,
            image=image_image_4
        )

        image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_5
        )

        entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(
            220.0,
            197.0,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=94.0,
            y=185.0,
            width=252.0,
            height=22.0
        )

        entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_2 = canvas.create_image(
            220.0,
            305.0,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=94.0,
            y=293.0,
            width=252.0,
            height=22.0
        )

        entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        entry_bg_3 = canvas.create_image(
            220.0,
            413.0,
            image=entry_image_3
        )
        entry_3 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_3.place(
            x=94.0,
            y=401.0,
            width=252.0,
            height=22.0
        )

        entry_image_4 = PhotoImage(
            file=relative_to_assets("entry_4.png"))
        entry_bg_4 = canvas.create_image(
            220.0,
            521.0,
            image=entry_image_4
        )
        entry_4 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_4.place(
            x=94.0,
            y=509.0,
            width=252.0,
            height=22.0
        )

        
        def register():
            global now_id
            global entry_1
            global entry_2
            global entry_3
            global entry_4

            if entry_3.get() == entry_4.get():
                if get_user(entry_1.get()) is not None:
                    msgbox.showwarning("에러", "이미 가입되어있습니다.")
                else:
                    insert_user(entry_1.get(), entry_3.get(), entry_2.get(), "None")
                    now_id = entry_1.get()
                    msgbox.showinfo("성공", "성공적으로 회원가입 되었습니다.")
                    
                    turn_window(11)
            else:
                msgbox.showwarning("에러", "비밀번호가 일치하지 않습니다.")

    elif window_id == 14:   
                
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame14/")


        def is_open():
            send_control_message(client_socket, "%QQQQ")
            if opening:
                turn_window(5)
            else:
                pass
            #print(receive_control_message(client_socket))
        
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            110.0,
            266.0,
            image=image_image_1
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            269.0,
            788.0,
            image=image_image_2
        )

        canvas.create_rectangle(
            0.0,
            784.0,
            392.992431640625,
            852.0000305175781,
            fill="#000000",
            outline="")

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        button_1.place(
            x=324.175048828125,
            y=806.0000610351562,
            width=23.939085006713867,
            height=24.0
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        button_2.place(
            x=232.0,
            y=806.0,
            width=25.0,
            height=24.0
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        button_3.place(
            x=138.0,
            y=806.0,
            width=25.0,
            height=24.0
        )

        button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        button_4.place(
            x=43.0,
            y=807.0,
            width=25.0,
            height=23.0
        )

        canvas.create_rectangle(
            0.0,
            784.0,
            392.992431640625,
            852.0000305175781,
            fill="#000000",
            outline="")

        button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        button_5 = Button(
            image=button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        button_5.place(
            x=324.175048828125,
            y=806.0000610351562,
            width=23.939085006713867,
            height=24.0
        )

        button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        button_6 = Button(
            image=button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_6 clicked"),
            relief="flat"
        )
        button_6.place(
            x=232.0,
            y=806.0,
            width=25.0,
            height=24.0
        )

        button_image_7 = PhotoImage(
            file=relative_to_assets("button_7.png"))
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_7 clicked"),
            relief="flat"
        )
        button_7.place(
            x=138.0,
            y=806.0,
            width=25.0,
            height=24.0
        )

        button_image_8 = PhotoImage(
            file=relative_to_assets("button_8.png"))
        button_8 = Button(
            image=button_image_8,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_8 clicked"),
            relief="flat"
        )
        button_8.place(
            x=43.0,
            y=807.0,
            width=25.0,
            height=23.0
        )

        canvas.create_rectangle(
            0.0,
            784.0,
            392.992431640625,
            852.0000305175781,
            fill="#000000",
            outline="")

        button_image_9 = PhotoImage(
            file=relative_to_assets("button_9.png"))
        button_9 = Button(
            image=button_image_9,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_9 clicked"),
            relief="flat"
        )
        button_9.place(
            x=324.175048828125,
            y=806.0000610351562,
            width=23.939085006713867,
            height=24.0
        )

        button_image_10 = PhotoImage(
            file=relative_to_assets("button_10.png"))
        button_10 = Button(
            image=button_image_10,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_10 clicked"),
            relief="flat"
        )
        button_10.place(
            x=232.0,
            y=806.0,
            width=25.0,
            height=24.0
        )

        button_image_11 = PhotoImage(
            file=relative_to_assets("button_11.png"))
        button_11 = Button(
            image=button_image_11,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_11 clicked"),
            relief="flat"
        )
        button_11.place(
            x=138.0,
            y=806.0,
            width=25.0,
            height=24.0
        )

        button_image_12 = PhotoImage(
            file=relative_to_assets("button_12.png"))
        button_12 = Button(
            image=button_image_12,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_12 clicked"),
            relief="flat"
        )
        button_12.place(
            x=43.0,
            y=807.0,
            width=25.0,
            height=23.0
        )

        button_image_13 = PhotoImage(
            file=relative_to_assets("button_13.png"))
        button_13 = Button(
            image=button_image_13,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_13 clicked"),
            relief="flat"
        )
        button_13.place(
            x=306.0,
            y=63.0,
            width=21.0,
            height=24.0
        )

        button_image_14 = PhotoImage(
            file=relative_to_assets("button_14.png"))
        button_14 = Button(
            image=button_image_14,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_14 clicked"),
            relief="flat"
        )
        button_14.place(
            x=345.0,
            y=63.0,
            width=22.0,
            height=24.0
        )

        button_image_15 = PhotoImage(
            file=relative_to_assets("button_15.png"))
        button_15 = Button(
            image=button_image_15,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_15 clicked"),
            relief="flat"
        )
        button_15.place(
            x=30.0,
            y=63.0,
            width=24.0,
            height=20.0
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            196.0,
            287.0,
            image=image_image_3
        )

        button_image_16 = PhotoImage(
            file=relative_to_assets("button_16.png"))
        button_16 = Button(
            image=button_image_16,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_16 clicked"),
            relief="flat"
        )
        button_16.place(
            x=309.0,
            y=197.0,
            width=58.0,
            height=26.0
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            64.0,
            210.0,
            image=image_image_4
        )

        image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = canvas.create_image(
            196.0,
            742.0,
            image=image_image_5
        )

        button_image_17 = PhotoImage(
            file=relative_to_assets("button_17.png"))
        button_17 = Button(
            image=button_image_17,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_17 clicked"),
            relief="flat"
        )
        button_17.place(
            x=35.0,
            y=724.0,
            width=323.0,
            height=38.0
        )

        image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        image_6 = canvas.create_image(
            196.0,
            557.0,
            image=image_image_6
        )

        button_image_18 = PhotoImage(
            file=relative_to_assets("button_18.png"))
        button_18 = Button(
            image=button_image_18,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_18 clicked"),
            relief="flat"
        )
        button_18.place(
            x=221.0,
            y=671.0,
            width=125.0,
            height=31.0
        )

        image_image_7 = PhotoImage(
            file=relative_to_assets("image_7.png"))
        image_7 = canvas.create_image(
            283.0,
            621.0,
            image=image_image_7
        )

        button_image_19 = PhotoImage(
            file=relative_to_assets("button_19.png"))
        button_19 = Button(
            image=button_image_19,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: is_open(),
            relief="flat"
        )
        button_19.place(
            x=48.0,
            y=671.0,
            width=125.0,
            height=31.0
        )

        image_image_8 = PhotoImage(
            file=relative_to_assets("image_8.png"))
        image_8 = canvas.create_image(
            110.0,
            621.0,
            image=image_image_8
        )

        button_image_20 = PhotoImage(
            file=relative_to_assets("button_20.png"))
        button_20 = Button(
            image=button_image_20,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(8),
            relief="flat"
        )
        button_20.place(
            x=221.0,
            y=510.0,
            width=125.0,
            height=31.0
        )

        image_image_9 = PhotoImage(
            file=relative_to_assets("image_9.png"))
        image_9 = canvas.create_image(
            283.0,
            460.0,
            image=image_image_9
        )

        button_image_21 = PhotoImage(
            file=relative_to_assets("button_21.png"))
        button_21 = Button(
            image=button_image_21,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_21 clicked"),
            relief="flat"
        )
        button_21.place(
            x=48.0,
            y=510.0,
            width=125.0,
            height=31.0
        )

        image_image_10 = PhotoImage(
            file=relative_to_assets("image_10.png"))
        image_10 = canvas.create_image(
            110.0,
            460.0,
            image=image_image_10
        )

        button_image_22 = PhotoImage(
            file=relative_to_assets("button_22.png"))
        button_22 = Button(
            image=button_image_22,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_22 clicked"),
            relief="flat"
        )
        button_22.place(
            x=309.0,
            y=372.0,
            width=58.0,
            height=26.0
        )

        image_image_11 = PhotoImage(
            file=relative_to_assets("image_11.png"))
        image_11 = canvas.create_image(
            64.0,
            385.0,
            image=image_image_11
        )

        image_image_12 = PhotoImage(
            file=relative_to_assets("image_12.png"))
        image_12 = canvas.create_image(
            60.0,
            286.0,
            image=image_image_12
        )

        image_image_13 = PhotoImage(
            file=relative_to_assets("image_13.png"))
        image_13 = canvas.create_image(
            174.0,
            143.0,
            image=image_image_13
        )

        image_image_14 = PhotoImage(
            file=relative_to_assets("image_14.png"))
        image_14 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_14
        )

    elif window_id == 11:
        def update_frame():
            
            global now_id
    
            global image_1
            global image_2
            global image_3
            global image_4

            ret, frame = cap.read()
            if ret:
                temp = frame
                frame = face_extractor(frame)
                
                if frame is None:
                    frame = temp
                else:
                    print(frame.data.tobytes())
                    update_face_hash(now_id, frame.data.tobytes())
                    frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                
                    img = Image.fromarray(frame)
                    imgtk = ImageTk.PhotoImage(image=img)
                    canvas.itemconfig(image_5, image=imgtk)
                    canvas.image = imgtk  # keep a reference
                    msgbox.showinfo("확인", "이미지가 등록 되었습니다.")
                    turn_window(17)
                    return
                    
                frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                
                img = Image.fromarray(frame)
                imgtk = ImageTk.PhotoImage(image=img)
                canvas.itemconfig(image_5, image=imgtk)
                canvas.image = imgtk  # keep a reference

                window.after(50, update_frame)  # Schedule the next frame update

        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame11/")
        
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            279.0,
            316.0,
            image=image_image_2
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        button_1.place(
            x=32.0,
            y=65.0,
            width=22.0,
            height=19.0
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            196.0,
            670.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_4
        )

        # Image_5 will be replaced with the camera feed
        image_5 = canvas.create_image(198.0, 303.0)

        cap = cv2.VideoCapture(0)
        update_frame()

    elif window_id == 8:
        def gen_random_password():
            copy_to_clipboard(generate_pin())
            msgbox.showinfo("확인", "클립보드에 임시 비밀번호가 저장되었습니다.")
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame8/")
        
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: gen_random_password(),
            relief="flat"
        )
        button_1.place(
            x=34.0,
            y=752.0,
            width=326.0,
            height=60.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            200.0,
            345.0,
            image=image_image_2
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            72.0,
            244.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            157.0,
            244.0,
            image=image_image_4
        )

        image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = canvas.create_image(
            242.0,
            244.0,
            image=image_image_5
        )

        image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        image_6 = canvas.create_image(
            327.0,
            244.0,
            image=image_image_6
        )

        image_image_7 = PhotoImage(
            file=relative_to_assets("image_7.png"))
        image_7 = canvas.create_image(
            199.0,
            250.0,
            image=image_image_7
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: turn_window(14),
            relief="flat"
        )
        button_2.place(
            x=31.0,
            y=64.0,
            width=25.0,
            height=23.0
        )

        image_image_8 = PhotoImage(
            file=relative_to_assets("image_8.png"))
        image_8 = canvas.create_image(
            196.0,
            77.0,
            image=image_image_8
        )

        image_image_9 = PhotoImage(
            file=relative_to_assets("image_9.png"))
        image_9 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_9
        )
    elif window_id == 5:
                
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame5/")
        
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        button_1.place(
            x=34.0,
            y=752.0,
            width=326.0,
            height=60.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            196.0,
            512.0,
            image=image_image_2
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        button_2.place(
            x=203.0,
            y=416.0,
            width=160.0,
            height=47.0
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        button_3.place(
            x=30.0,
            y=416.0,
            width=160.0,
            height=47.0
        )

        button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        button_4.place(
            x=30.0,
            y=373.0,
            width=333.0,
            height=31.0
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            196.0,
            259.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            118.0,
            260.0,
            image=image_image_4
        )

        image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = canvas.create_image(
            196.0,
            77.0,
            image=image_image_5
        )

        button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        button_5 = Button(
            image=button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        button_5.place(
            x=31.0,
            y=64.0,
            width=23.0,
            height=21.0
        )

        image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        image_6 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_6
        )
    
    elif window_id == 2:
                
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets/frame2/")
        
        canvas = Canvas(
            window,
            bg = "#181A20",
            height = 852,
            width = 393,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            196.0,
            835.0,
            image=image_image_1
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        button_1.place(
            x=34.0,
            y=752.0,
            width=326.0,
            height=60.0
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        button_2.place(
            x=203.0,
            y=416.0,
            width=160.0,
            height=47.0
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            196.0,
            512.0,
            image=image_image_2
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        button_3.place(
            x=30.0,
            y=416.0,
            width=160.0,
            height=47.0
        )

        button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        button_4.place(
            x=30.0,
            y=373.0,
            width=333.0,
            height=31.0
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            196.0,
            259.0,
            image=image_image_3
        )

        image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            118.0,
            260.0,
            image=image_image_4
        )

        image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = canvas.create_image(
            196.0,
            77.0,
            image=image_image_5
        )

        button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        button_5 = Button(
            image=button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        button_5.place(
            x=31.0,
            y=64.0,
            width=24.0,
            height=22.0
        )

        image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        image_6 = canvas.create_image(
            196.0,
            31.0,
            image=image_image_6
        )
"""main run"""

turn_window(24)
window.resizable(False, False)
threading.Thread(target=connect_to_server, daemon=True).start()
window.mainloop()
